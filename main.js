const $=(q,c=document)=>c.querySelector(q);const $$=(q,c=document)=>[...c.querySelectorAll(q)];const store=(k,v)=>localStorage.setItem(k,JSON.stringify(v));const load=(k,d)=>JSON.parse(localStorage.getItem(k)||JSON.stringify(d));
(() => { const root=document.documentElement; const saved=load("theme",null); if(saved) root.setAttribute("data-theme",saved); $("#themeToggle")?.addEventListener("click",()=>{ const cur=root.getAttribute("data-theme")==="light"?"dark":"light"; root.setAttribute("data-theme",cur); store("theme",cur); }); })();
(() => { const t=$("#navToggle"), m=$("#navMenu"); if(!t||!m) return; t.addEventListener("click",()=>{const open=m.classList.toggle("show"); t.setAttribute("aria-expanded",open)}); document.addEventListener("click",(e)=>{ if(!m.contains(e.target)&&!t.contains(e.target)) m.classList.remove("show");}); })();
(() => { const y=$("#y"); if(y) y.textContent=new Date().getFullYear(); })();

const state={posts:[],filtered:[],tag:"all",q:""};
async function loadPosts(){ try{ const res=await fetch("posts.json",{cache:"no-store"}); const data=await res.json(); state.posts=data.posts.sort((a,b)=>new Date(b.date)-new Date(a.date)); applyFilters(); updateHashRoute(); }catch(e){ console.error(e); const empty=$("#emptyState"); empty?.classList.remove("hidden"); if(empty) empty.textContent="Yazıları yüklerken sorun oluştu."; } }
function applyFilters(){ const q=state.q.trim().toLowerCase(); state.filtered=state.posts.filter(p=>{ const tagOk=state.tag==="all"||(p.tags||[]).includes(state.tag); const blob=[p.title_tr,p.excerpt_tr,p.content_tr].join(" ").toLowerCase(); const qOk=!q||blob.includes(q); return tagOk&&qOk;}); renderPosts(); }
function postCard(p){ return `<article class="card post" data-id="${p.id}" data-slug="${p.slug}"><img src="${p.cover||'img/post-placeholder.webp'}" alt="" loading="lazy"><div class="card-body"><div class="meta"><span>${new Date(p.date).toLocaleDateString('tr-TR')}</span> • <span>${(p.tags||[]).join(', ')}</span></div><h3>${p.title_tr}</h3><p class="muted">${p.excerpt_tr}</p><div class="actions"><a class="btn btn-primary" href="#/post/${p.slug}">Oku</a></div></div></article>`;}
function renderPosts(){ const c=$("#posts"); if(!c) return; c.innerHTML=state.filtered.map(postCard).join(""); const empty=$("#emptyState"); if(state.filtered.length===0) empty?.classList.remove("hidden"); else empty?.classList.add("hidden"); }
function openModal(p){ if(!p) return; $("#mTitle").textContent=p.title_tr; $("#mMeta").textContent=`${new Date(p.date).toLocaleDateString('tr-TR')} • ${(p.tags||[]).join(', ')}`; $("#mContent").innerHTML=p.content_tr; const url=`${location.origin}${location.pathname}#/post/${p.slug}`; $("#postModal").showModal(); $("#shareBtn")?.addEventListener("click", async ()=>{ if(navigator.share){ try{ await navigator.share({title:document.title,text:p.title_tr,url}); }catch(e){} }else{ await navigator.clipboard.writeText(url); alert("Link panoya kopyalandı."); } }, {once:true}); $("#copyLinkBtn")?.addEventListener("click", async ()=>{ await navigator.clipboard.writeText(url); alert("Link panoya kopyalandı."); }, {once:true}); }
(() => { const m=$("#postModal"), c=$("#mClose"); if(m&&c){ c.addEventListener("click",()=>m.close()); m.addEventListener("click",e=>{ if(e.target===m) m.close(); }); } })();
function updateHashRoute(){ const h=location.hash; if(h.startsWith("#/post/")){ const slug=decodeURIComponent(h.replace("#/post/","")); const p=state.posts.find(x=>x.slug===slug); if(p) openModal(p); } }
window.addEventListener("hashchange", updateHashRoute);
(() => { const f=$("#searchForm"), i=$("#searchInput"); if(f&&i){ f.addEventListener("submit",(e)=>{e.preventDefault(); state.q=i.value; applyFilters();}); i.addEventListener("input",e=>{ state.q=e.target.value; applyFilters();}); } })();
(() => { const form=$("#contactForm"); if(!form) return; form.addEventListener("submit",(e)=>{ e.preventDefault(); const fd=new FormData(form); const mailto=`mailto:${encodeURIComponent('civanmertkrc@gmail.com')}?subject=${encodeURIComponent(fd.get('subject'))}&body=${encodeURIComponent(`Ad: ${fd.get('name')}\nEposta: ${fd.get('email')}\n\n${fd.get('message')}`)}`; $("#formStatus").textContent="E-posta istemcin açılıyor…"; window.location.href=mailto; form.reset(); }); })();

if("serviceWorker" in navigator){ window.addEventListener("load", ()=>{ navigator.serviceWorker.register("./sw.js").catch(console.warn); }); }
document.addEventListener("DOMContentLoaded",()=>{ if($("#posts")) loadPosts(); });
navigator.serviceWorker.addEventListener("controllerchange", () => {
  window.location.reload();
});

